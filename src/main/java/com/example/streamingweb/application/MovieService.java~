package com.example.streamingweb.application;

import com.example.streamingweb.domain.Movie;
import com.example.streamingweb.domain.Rating;
import com.example.streamingweb.infrastructure.MovieRepository;

import java.util.List;

public class MovieService {
    private final MovieRepository movieRepository;

    public MovieService(MovieRepository movieRepository) {
        this.movieRepository = movieRepository;
    }

    public List<Movie> getAllMovies() {
        return movieRepository.getAll();
    }

    public String playMovie(Long movieId) {
        Movie movie = movieRepository.findById(movieId);
        if (movie != null) {
            return "Now playing: " + movie.getTitle();
        }
        return "Movie not found";
    }

    public void submitRating(Long userId, Long movieId, int rating) {
        Rating newRating = new Rating(userId, movieId, rating);
        movieRepository.saveRating(newRating);
        updateAverageRating(movieId);
    }

    private void updateAverageRating(Long movieId) {
        List<Rating> ratings = movieRepository.getRatingsForMovie(movieId);
        if (!ratings.isEmpty()) {
            double average = ratings.stream()
                    .mapToInt(Rating::getRating)
                    .average()
                    .orElse(0.0);
            movieRepository.updateAverageRating(movieId, average);
        }
    }
}